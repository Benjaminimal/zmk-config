/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_default {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB               &kp Q        &kp W        &kp E       &kp R        &kp T    &kp Y  &kp U        &kp I       &kp O        &kp P           &kp BSPC
&kp ESC               &mt LCTRL A  &mt LMETA S  &mt LALT D  &mt LSHFT F  &kp G    &kp H  &mt RSHFT J  &mt RALT K  &mt RMETA L  &mt RCTRL SEMI  &kp ENTER
&kp NON_US_BACKSLASH  &kp Z        &kp X        &kp C       &kp V        &kp B    &kp N  &kp M        &kp COMMA   &kp DOT      &kp FSLH        &kp MINUS
                                                &mo 0       &kp SPACE    &mo 0    &mo 0  &mo 0        &mo 0
            >;
        };

        layer_symbol {
            bindings = <
&trans  &kp LS(GRAVE)          &kp LS(NON_US_HASH)  &kp NON_US_HASH  &kp LS(DLLR)   &kp LS(PRCNT)    &none          &kp LS(AMPS)    &kp LS(STAR)   &kp LS(LBRC)    &kp LS(RBRC)    &trans
&trans  &mt LCTRL EXCLAMATION  &mt LMETA LS(SQT)    &mt LALT LS(N2)  &mt LSHFT SQT  &kp GRAVE        &kp LS(CARET)  &mt RSHFT LPAR  &mt RALT RPAR  &mt RMETA LBKT  &mt RCTRL RBKT  &trans
&none   &none                  &none                &none            &none          &none            &none          &none           &none          &none           &none           &none
                                                    &trans           &trans         &trans           &trans         &trans          &trans
            >;
        };

        layer_number {
            bindings = <
&trans  &none         &none         &none        &none         &none     &kp FSLH  &kp MINUS     &kp STAR     &kp PLUS      &kp EQUAL     &trans
&trans  &mt LCTRL N1  &mt LMETA N2  &mt LALT N3  &mt LSHFT N4  &kp N5    &kp N6    &mt RSHFT N7  &mt RALT N8  &mt RMETA N9  &mt RCTRL N0  &trans
&none   &none         &none         &none        &none         &none     &none     &none         &kp COMMA    &kp DOT       &none         &none
                                    &trans       &trans        &trans    &trans    &trans        &trans
            >;
        };

        layer_navigation {
            bindings = <
&trans  &none      &none     &none     &none      &none     &kp HOME  &kp PG_DN       &kp PG_UP    &kp END          &kp DEL        &trans
&trans  &kp LCTRL  &kp LGUI  &kp LALT  &kp LSHFT  &none     &kp LEFT  &mt RSHFT DOWN  &mt RALT UP  &mt RMETA RIGHT  &mt RCTRL INS  &trans
&none   &none      &none     &none     &none      &none     &none     &kp K_CMENU     &none        &none            &none          &none
                             &trans    &trans     &trans    &trans    &trans          &trans
            >;
        };

        layer_function {
            bindings = <
&trans  &kp ESC       &kp KP_NLCK   &kp SLCK     &none         &kp F6    &kp F7  &kp PSCRN     &none        &none         &none          &trans
&trans  &mt LCTRL F1  &mt LMETA F2  &mt LALT F3  &mt LSHFT F4  &kp F5    &kp F6  &mt RSHFT F7  &mt RALT F8  &mt RMETA F9  &mt RCTRL F10  &trans
&none   &none         &none         &none        &none         &none     &none   &none         &none        &none         &none          &none
                                    &trans       &trans        &trans    &trans  &trans        &trans
            >;
        };

        layer_meta {
            bindings = <
&trans  &none  &none  &none   &none   &none     &none       &kp C_PLAY_PAUSE  &kp C_STOP    &none             &none             &trans
&trans  &none  &none  &none   &none   &none     &kp C_PREV  &kp C_VOL_DN      &kp C_VOL_UP  &mt RMETA C_NEXT  &mt RCTRL C_MUTE  &trans
&none   &none  &none  &none   &none   &none     &none       &kp C_BRI_DN      &kp C_BRI_UP  &none             &none             &none
                      &trans  &trans  &trans    &trans      &trans            &trans
            >;
        };
    };
};
